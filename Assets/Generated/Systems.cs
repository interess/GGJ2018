// <auto-generated>
//     This code was generated with love by Gentitas.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using Entitas;
using UnityEngine;
using System.Collections.Generic;

namespace DZ.Core.Systems {
	public abstract class InitializeSystem : Entitas.Gentitas.Systems.InitializeSystem {
		protected StateContext state { get { return Contexts.state; } }

		public InitializeSystem() {
			// Create request to shared instance, so contexts are created before any action.
			var _state = Contexts.state;
		}
	}

	public abstract class ExecuteSystem : Entitas.Gentitas.Systems.ExecuteSystem {
		protected StateContext state { get { return Contexts.state; } }

		public ExecuteSystem() {
			// Create request to shared instance, so contexts are created before any action.
			var _state = Contexts.state;
		}
	}

	public abstract class StateReactiveSystem : Entitas.Gentitas.Systems.ReactiveSystem<StateEntity> {
		protected StateContext state { get { return Contexts.state; } }

		public StateReactiveSystem() : base(Contexts.state) {
			// Create request to shared instance, so contexts are created before any action.
			var _state = Contexts.state;
		}
	}

	public abstract class MultiReactiveSystem<TEntity> : Entitas.Gentitas.Systems.MultiReactiveSystem<TEntity, Contexts>
		where TEntity : class, IEntity
	{
		protected StateContext state { get { return Contexts.state; } }

		public MultiReactiveSystem() : base(Contexts._sharedInstance) {
			// Create request to shared instance, so contexts are created before any action.
			var _state = Contexts.state;
		}
	}
}
