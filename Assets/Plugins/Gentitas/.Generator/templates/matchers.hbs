// <auto-generated>
//     This code was generated with love by Gentitas.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using Entitas;
using System.Collections.Generic;

{{#each this}}
namespace {{@key}} {
    {{#each contexts}}
    public sealed partial class {{toUpper @key}}Matcher {
        public static Entitas.IAllOfMatcher<{{toUpper @key}}Entity> AllOf(params int[] indices) {
            return Entitas.Matcher<{{toUpper @key}}Entity>.AllOf(indices);
        }

        public static Entitas.IAllOfMatcher<{{toUpper @key}}Entity> AllOf(params Entitas.IMatcher<{{toUpper @key}}Entity>[] matchers) {
            return Entitas.Matcher<{{toUpper @key}}Entity>.AllOf(matchers);
        }

        public static Entitas.IAnyOfMatcher<{{toUpper @key}}Entity> AnyOf(params int[] indices) {
            return Entitas.Matcher<{{toUpper @key}}Entity>.AnyOf(indices);
        }

        public static Entitas.IAnyOfMatcher<{{toUpper @key}}Entity> AnyOf(params Entitas.IMatcher<{{toUpper @key}}Entity>[] matchers) {
            return Entitas.Matcher<{{toUpper @key}}Entity>.AnyOf(matchers);
        }
        
        {{#each components}}
        static IMatcher<{{#if ../settings.isPartial}}I{{/if}}{{toUpper @../key}}Entity> _matcher{{toUpper @key}};

        public static IMatcher<{{#if ../settings.isPartial}}I{{/if}}{{toUpper @../key}}Entity> {{toUpper @key}} {
            get {
                if(_matcher{{toUpper @key}} == null) {
                    var matcher = (Matcher<{{#if ../settings.isPartial}}I{{/if}}{{toUpper @../key}}Entity>)Matcher<{{#if ../settings.isPartial}}I{{/if}}{{toUpper @../key}}Entity>.AllOf({{toUpper @../key}}ComponentsLookup.{{toUpper @key}});
                    matcher.componentNames = {{toUpper @../key}}ComponentsLookup.componentNames;
                    _matcher{{toUpper @key}} = matcher;
                }

                return _matcher{{toUpper @key}};
            }
        }

        {{/each}}
    }

    {{/each}}
}

{{/each}}
